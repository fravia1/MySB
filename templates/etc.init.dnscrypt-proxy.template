#!/bin/bash 
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

### BEGIN INIT INFO
# Provides:          dnscrypt
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start DNScrypt-proxy
# Description:       Encrypt DNS queries.
### END INIT INFO

. /lib/lsb/init-functions

## VARs
PATH=/usr/sbin:/usr/bin:/sbin:/bin

MySB_DB="<MySB_DB>"
NAME="dnscrypt-proxy"
DESC="OpenDNS DNScrypt-proxy"
DIR="/var/run/dnscrypt-proxy"
DAEMON_USER="dnscrypt"
DAEMON="/usr/local/sbin/dnscrypt-proxy"
DIR_LOG="/var/log/dnscrypt-proxy"
LOG_FILE="dnscrypt-proxy.log"
PID="$DIR/dnscrypt-proxy.pid"

# Update DB if argument given is a good resolver
AllResolvers="`sqlite3 $MySB_DB \"SELECT name FROM dnscrypt_resolvers WHERE dnssec = 'yes' AND no_logs = 'yes'\"`"

# Cleaning the list (IPv6)
for Resolver in $AllResolvers; do
	if [ -z "`echo $Resolver | grep 'ipv6'`" ] && [ -z "`echo $Resolver | grep '5353'`" ] && [ "$Resolver" != "soltysiak" ]; then
		Resolvers="${Resolvers} ${Resolver}"
	fi
done
Resolvers="`echo $Resolvers | sed -e 's/^ //g;' | sed 's/\s+$//'`"

if [ -z "$Resolvers" ]; then
	Resolvers="dnscrypt.eu-dk"
fi

if [ ! -d $DIR ]; then mkdir $DIR; fi
if [ ! -d $DIR_LOG ]; then mkdir $DIR_LOG; fi

## Delete user PID file
delete_pid_file() {
	LogFile="$1"
	PID="$2"
	Resolver="$3"

    if [ -e $PID ]; then
        rm -f $PID
		echo "Delete $NAME $Resolver PID file: "`date` >> $LogFile
    fi
}

## Function stop case
restart_stop_case() {
	LogFile="$1"
	PID="$2"
	Resolver="$3"

	do_start
	case "$?" in
		0)
			echo "RESTART: "`date` >> $LogFile
			log_end_msg 0
		;;
		1) # Old process is still running
			echo "Could not be restarted, old process is still running: "`date` >> $LogFile
			log_end_msg 1
		;;
		*) # Failed to start
			echo "Could not be restarted: "`date` >> $LogFile
			delete_pid_file "$LogFile" "$PID" "$Resolver"
			log_end_msg 1
		;;
	esac
}

#
# Function that starts the daemon/service
do_start() {
	DaemonOpts="$1"
	LogFile="$2"
	PID="$3"

	# Delete ghost screen pid file
	if [ -e $PID ]; then
		pidofproc -p $PID &> /dev/null || rm -f $PID
	fi
echo $DAEMON $DaemonOpts >> /tmp/dns
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	start-stop-daemon --start --quiet --background --make-pidfile --test --pidfile $PID --exec $DAEMON -- $DaemonOpts 2>> $LogFile || return 1

	start-stop-daemon --start --quiet --background --make-pidfile --pidfile $PID --exec $DAEMON -- $DaemonOpts 2>> $LogFile || return 2
}

#
# Function that stops the daemon/service
#
do_stop() {
	LogFile="$1"
	PID="$2"

	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PID --exec "$DAEMON" 2>> $LogFile
	RETVAL="$?"

	sleep 1
	return "$RETVAL"
}

## Function that check BIND status
if [ "`pidof named`" == "" ]; then
	service bind9 restart &> /dev/null
fi

case "$1" in
	start)		
		i=0
		for Resolver in $Resolvers; do
			(( i++ ))
			if [ $i -eq 1 ]; then
				sed -i '/nameserver/d' /etc/resolv.conf
			fi
			echo "nameserver 127.0.0.$i" >> /etc/resolv.conf

			log_daemon_msg "Starting $DESC" "$Resolver"

			do_start "--local-address=127.0.0.$i --user=$DAEMON_USER --resolver-name=$Resolver --loglevel=99 --resolvers-list=/usr/local/share/dnscrypt-proxy/dnscrypt-resolvers.csv --logfile=$DIR_LOG/$Resolver.log" "$DIR_LOG/$Resolver.log" "$DIR/$Resolver.pid"
			
			case "$?" in
				0)
					echo "START $Resolver on 127.0.0.$i: "`date` >> $DIR_LOG/$Resolver.log
					log_end_msg 0
				;;
				1)
					echo "Already running ($Resolver on 127.0.0.$i): "`date` >> $DIR_LOG/$Resolver.log
					log_end_msg 0
				;;
				2)
					echo "Could not be started ($Resolver on 127.0.0.$i): "`date` >> $DIR_LOG/$Resolver.log
					delete_pid_file $DIR_LOG/$Resolver.log $DIR/$Resolver.pid $Resolver
					log_end_msg 1
				;;
			esac
		done
	;;

	
	stop)
		i=0
		for Resolver in $Resolvers; do
			(( i++ ))
			sed -i '/nameserver/d' /etc/resolv.conf
			if [ $i -eq 1 ]; then
				echo "nameserver 127.0.0.1" >> /etc/resolv.conf
			fi
			
			log_daemon_msg "Stopping $DESC" "$Resolver"
			do_stop $DIR_LOG/$Resolver.log $DIR/$Resolver.pid
	
			case "$?" in
				0)
					echo "STOP: "`date` >> $DIR_LOG/$Resolver.log
					delete_pid_file $DIR_LOG/$Resolver.log $DIR/$Resolver.pid $Resolver
					log_end_msg 0
				;;
				1)
					echo "Already stopped: "`date` >> $DIR_LOG/$Resolver.log
					delete_pid_file $DIR_LOG/$Resolver.log $DIR/$Resolver.pid $Resolver
					log_end_msg 0
				;;
				2)
					echo "Could not be stopped: "`date` >> $DIR_LOG/$Resolver.log
					log_end_msg 1
				;;
			esac
		done
	;;

	restart)
		for Resolver in $Resolvers; do
			log_daemon_msg "Restarting $DESC" "$Resolver"
			
			do_stop "$DIR_LOG/$Resolver.log" "$DIR/$Resolver.pid"
			case "$?" in
				0)
					restart_stop_case "$DIR_LOG/$Resolver.log" "$DIR/$Resolver.pid" "$Resolver"
				;;
				1)
					restart_stop_case "$DIR_LOG/$Resolver.log" "$DIR/$Resolver.pid" "$Resolver"
				;;
				*) # Failed to stop
					echo "Could not be restarted: "`date` >> $DIR_LOG/$Resolver.log
					log_end_msg 1
				;;
			esac			
		done
	;;

	status)
		for Resolver in $Resolvers; do
			status_of_proc -p "$DIR/$Resolver.pid" "$DAEMON" "$Resolver" && StatusLSB
		done
		exit 0
	;;

	*)
		echo "Usage: service dnscrypt-proxy {start|stop|restart|status} <ResolverName>"
		exit 3
	;;
esac

exit 0

##################### LAST LINE ######################################