#!/bin/bash 
# ----------------------------------
source /etc/MySB/inc/includes_before.bsh
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

if [ "$USAGE" == "ON" ]; then
	if [ "$IsInstalled_DNScrypt" == "NO" ]; then
		echo
		echo -e "${CYELLOW}DNScrypt-proxy is not installed!$CEND"
		QuestionGetString NO "Install DNScrypt-proxy? " IsInstalled_DNScrypt YES

		sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '$(echo $IsInstalled_DNScrypt | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'DNScrypt-proxy';"

		if [ "$IsInstalled_DNScrypt" != "YES" ]; then
			EndingScript 0
		fi
	fi
fi

if [ "$ToInstall_DNScrypt" == "YES" ]; then
	#### Install packages
	PackagesManage install "ldnsutils libldns-dev bind9"
	
	#### STOP services
	ManageServices stop "bind9"

	#### Add dnscrypt user
	if [ "`cat /etc/passwd | grep dnscrypt`" == "" ]; then
		adduser --system --group --quiet --home /var/run/dnscrypt-proxy --shell /bin/false --disabled-password --disabled-login dnscrypt
	fi

	#### Correcting minor bug display in Bind9 init script
	sed -i "s/echo \"waiting for pid \$pid to die\"/break #echo \"waiting for pid \$pid to die\"/g" /etc/init.d/bind9
	sed -i "s/echo \"giving up on pid \$pid with kill -0; trying -9\"/#echo \"giving up on pid \$pid with kill -0; trying -9\"/g" /etc/init.d/bind9
	sed -i "s/echo \"giving up on pid \$pid\"/#echo \"giving up on pid \$pid\"/g" /etc/init.d/bind9

	sqlite3 $MySB_DB "UPDATE services SET to_install = '0', is_installed = '1' WHERE serv_name = 'BIND';"

	# LIBsodium
	if [ -d /etc/MySB/sources/libsodium ]; then
		cd /etc/MySB/sources/libsodium/
		git stash
		git pull
		make clean
	else
		if [ -d /etc/MySB/temp/libsodium ]; then
			mv -v /etc/MySB/temp/libsodium /etc/MySB/sources/
		else
			git clone $GIT_libsodium /etc/MySB/sources/libsodium
		fi
	fi

	if [ -d /etc/MySB/temp/libsodium ]; then
		rm -vrf /etc/MySB/temp/libsodium
	fi

	cd /etc/MySB/sources/libsodium/
	./autogen.sh
	./configure --enable-minimal
	make -j$PROCESSOR
	make check
	make install
	/sbin/ldconfig

	# DNScrypt
	if [ -d /etc/MySB/temp/dnscrypt* ]; then
		if [ -d /etc/MySB/sources/dnscrypt/ ]; then
			rm -vrf /etc/MySB/sources/dnscrypt/
		fi
		mv -v /etc/MySB/temp/dnscrypt* /etc/MySB/sources/dnscrypt
	fi
	if [ ! -d /etc/MySB/sources/dnscrypt/ ] && [ ! -f /etc/MySB/files/dnscrypt.tar.gz ]; then
		wget --no-check-certificate $TARGZ_dnscrypt -O /etc/MySB/files/dnscrypt.tar.gz
		tar -zxvf /etc/MySB/files/dnscrypt.tar.gz -C /etc/MySB/sources/
	fi
	cd /etc/MySB/sources/dnscrypt/
	make clean
	./autogen.sh
	./configure --enable-plugins
	make -j$PROCESSOR
	make check
	make install

	#### Bind Options
	sed -i '/forwarders/d' /etc/bind/named.conf.options
	awk '{ print } /dnssec-validation auto;/ { print "        forwarders { 127.0.0.1 port 52; };" }' /etc/bind/named.conf.options > /tmp/named.conf.options
	mv -v /tmp/named.conf.options /etc/bind/named.conf.options
	sed -i '/version/d' /etc/bind/named.conf.options
	awk '{ print } /dnssec-validation auto;/ { print "        version \"MySB Secured DNS server\";" }' /etc/bind/named.conf.options > /tmp/named.conf.options
	mv -v /tmp/named.conf.options /etc/bind/named.conf.options

	#### init.d
	cp /etc/MySB/templates/etc.init.dnscrypt-proxy.template /etc/init.d/dnscrypt-proxy
	perl -pi -e "s/<MySB_DB>/`echo $MySB_DB | sed s,/,\\\\\\\\\\/,g`/g" /etc/init.d/dnscrypt-proxy
	chmod +x /etc/init.d/dnscrypt-proxy
	update-rc.d dnscrypt-proxy defaults

	#### /etc/resolv.conf
	if hash dnscrypt-proxy 2>/dev/null; then
		sed -i '/nameserver/d' /etc/resolv.conf
		echo "nameserver 127.0.0.1" >> /etc/resolv.conf
	fi

	sqlite3 $MySB_DB "UPDATE services SET to_install = '0',is_installed = '1' WHERE serv_name = 'DNScrypt-proxy';"

	#### Update resolvers infos in db
	if [ -f /usr/local/share/dnscrypt-proxy/dnscrypt-resolvers.csv ] && hash csvtool 2>/dev/null; then
		# Clean the table 'dnscrypt_resolvers'
		sqlite3 $MySB_DB "DELETE FROM dnscrypt_resolvers WHERE 1"

		# Get resolvers information from 'dnscrypt-resolvers.csv'
		ResolversTable="`csvtool -t ',' -u '|' cat /usr/local/share/dnscrypt-proxy/dnscrypt-resolvers.csv | csvtool drop 1 - | sed 's/ /#/g;'`"
		for Line in $ResolversTable; do
			Name="`echo $Line | awk '{split($0,a,\"|\"); print a[1]}' | sed 's/#/ /g;'`"
			FullName="`echo $Line | awk '{split($0,a,\"|\"); print a[2]}' | sed 's/#/ /g;'`"
			Description="`echo $Line | awk '{split($0,a,\"|\"); print a[3]}' | sed 's/#/ /g;'`"
			Location="`echo $Line | awk '{split($0,a,\"|\"); print a[4]}' | sed 's/#/ /g;'`"
			Coordinates="`echo $Line | awk '{split($0,a,\"|\"); print a[5]}' | sed 's/#/ /g;'`"
			URL="`echo $Line | awk '{split($0,a,\"|\"); print a[6]}' | sed 's/#/ /g;' | sed 's/http.\/\//http:\/\//g;'`"
			Version="`echo $Line | awk '{split($0,a,\"|\"); print a[7]}' | sed 's/#/ /g;'`"
			DnssecVal="`echo $Line | awk '{split($0,a,\"|\"); print a[8]}' | sed 's/#/ /g;'`"
			NoLogs="`echo $Line | awk '{split($0,a,\"|\"); print a[9]}' | sed 's/#/ /g;'`"
			Namecoin="`echo $Line | awk '{split($0,a,\"|\"); print a[10]}' | sed 's/#/ /g;'`"
			ResolverAddress="`echo $Line | awk '{split($0,a,\"|\"); print a[11]}' | sed 's/#/ /g;'`"
			ProviderName="`echo $Line | awk '{split($0,a,\"|\"); print a[12]}' | sed 's/#/ /g;'`"
			ProviderPublicKey="`echo $Line | awk '{split($0,a,\"|\"); print a[13]}' | sed 's/#/ /g;'`"
			ProviderPublicKeyTxtRecord="`echo $Line | awk '{split($0,a,\"|\"); print a[14]}' | sed 's/#/ /g;'`"	

			# Add new informations in DB
			sqlite3 $MySB_DB "UPDATE system SET dnscrypt_resolver = 'opendns' WHERE id_system = '1';"
			sqlite3 $MySB_DB "INSERT INTO dnscrypt_resolvers (name,full_name,description,location,coordinates,url,version,dnssec,no_logs,namecoin,resolver_address,provider_name,provider_public_key,provider_public_key_txt_record) VALUES (\"$Name\",\"$FullName\",\"$Description\",\"$Location\",\"$Coordinates\",\"$URL\",\"$Version\",\"$DnssecVal\",\"$NoLogs\",\"$Namecoin\",\"$ResolverAddress\",\"$ProviderName\",\"$ProviderPublicKey\",\"$ProviderPublicKeyTxtRecord\");"			
		done
	fi

	# Check service
	crontab -l > /tmp/crontab.tmp
	sed -i '/dnscrypt-proxy/d' /tmp/crontab.tmp
	echo "5 * * * * if ! ( /bin/ps ax | grep 'dnscrypt-proxy' | sed '/grep/d' &> /dev/null ); then /etc/init.d/dnscrypt-proxy restart &> /dev/null; fi" >> /tmp/crontab.tmp
	crontab /tmp/crontab.tmp
	rm -f /tmp/crontab.tmp
	
	#### START services
	ManageServices start "cron dnscrypt-proxy"
	
	#### Add SMTP host in cache
	if [ "$SMTP_Provider" != "LOCAL" ]; then
		ping -c5 $SMTP_Host &> /dev/null
	fi	
fi

# -----------------------------------------
source /etc/MySB/inc/includes_after.bsh
# -----------------------------------------
##################### LAST LINE ######################################