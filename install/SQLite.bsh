#!/bin/bash 
# ----------------------------------
source /etc/MySB/inc/includes_before.bsh
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

ManageDirectoriesAndFiles

if [ -s $MySB_DB ] && hash sqlite3 2> /dev/null; then

	#### Import users files to database
	if [ -d /etc/MySB/users/ ]; then
		UsersList="`ls /etc/MySB/users/ | grep '.info' | sed 's/.\{5\}$//'`"
		cd /etc/MySB/users/
		for SeedboxUser in $UsersList; do
			UserName="$(cat $SeedboxUser.info | grep 'Username=' | awk '{ print $2 }')"
			UserEmail="$(cat $SeedboxUser.info | grep 'E-mail=' | awk '{ print $2 }')"
			UserPassword="$(cat $SeedboxUser.info | grep 'Password=' | awk '{ print $2 }')"
			UserRPC="$(cat $SeedboxUser.info | grep 'RPC=' | awk '{ print $2 }')"
			UserSSH="$(cat $SeedboxUser.info | grep 'SSH=' | awk '{ print $2 }' | sed 's/YES/1/g;' | sed 's/NO/0/g;')"
			UserSudo="$(cat $SeedboxUser.info | grep 'Sudo powers=' | awk '{ print $3 }' | sed 's/YES/1/g;' | sed 's/NO/0/g;')"
			UserIP="$(cat $SeedboxUser.info | grep 'IP Address=' | awk '{ print $3 }')"
			UserScgiPort="$(cat $SeedboxUser.info | grep 'SCGI port=' | awk '{ print $3 }')"
			UserRtorrentPort="$(cat $SeedboxUser.info | grep 'rTorrent port=' | awk '{ print $3 }')"
			UserHomeDir="$(cat $SeedboxUser.info | grep 'Home=' | awk '{ print $2 }')"

			sqlite3 -echo $MySB_DB "INSERT into users (users_ident,users_email,users_passwd,rpc,sftp,sudo,admin,scgi_port,rtorrent_port,home_dir) VALUES (\"$UserName\",\"$UserEmail\",\"$UserPassword\",\"$UserRPC\",\"$UserSSH\",\"$UserSudo\",\"0\",\"$UserScgiPort\",\"$UserRtorrentPort\",\"$UserHomeDir\");"
			UserId="`sqlite3 $MySB_DB \"SELECT id_users FROM users WHERE users_ident = '$UserName'\"`"
echo "UserId "$UserId
			IFS=$','
			for ip in $UserIP; do 
				HostName="$(nslookup $ip | grep 'name =' | awk '{ print $4 }' | sed 's/.\{1\}$//g')"
				sqlite3 -echo $MySB_DB "INSERT into users_addresses (id_users,ipv4,hostname,check_by,is_active) VALUES (\"$UserId\",\"$ip\",\"$HostName\",\"ipv4\",\"1\");"
			done
			unset IFS
		done
		
		echo /etc/MySB/users/
	fi

	if [ -d /etc/MySB/infos/ ]; then
		# ----- Main user info
		if [ -f /etc/MySB/infos/email.info ] && [ -f /etc/MySB/infos/mainuser.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE users SET admin = '1' WHERE users_email = '$(cat /etc/MySB/infos/email.info)' and users_ident = '$(cat /etc/MySB/infos/mainuser.info)';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/email.info
				echo /etc/MySB/infos/mainuser.info
			fi
		fi

		# ----- Main user info

		#### Import files infos to database
		# ----- System info
		if [ -f /etc/MySB/infos/version.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE system SET mysb_version = '$(cat /etc/MySB/infos/version.info)' WHERE id_system = '1';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/version.info
			fi
		fi
		if [ -f /etc/MySB/infos/hostfqdn.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE system SET hostname = '$(cat /etc/MySB/infos/hostfqdn.info)' WHERE id_system = '1';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/hostfqdn.info
			fi
		fi
		if [ -f /etc/MySB/infos/ipaddress.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE system SET ipv4 = '$(cat /etc/MySB/infos/ipaddress.info)' WHERE id_system = '1';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/ipaddress.info
			fi
		fi
		if [ -f /etc/MySB/infos/primaryinet.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE system SET primary_inet = '$(cat /etc/MySB/infos/primaryinet.info)' WHERE id_system = '1';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/primaryinet.info
			fi
		fi
		if [ -f /etc/MySB/infos/timezone.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE system SET timezone = '$(cat /etc/MySB/infos/timezone.info)' WHERE id_system = '1';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/timezone.info
			fi
		fi
		if [ -f /etc/MySB/infos/MySB_password.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE system SET mysb_user = '$(cat /etc/MySB/infos/MySB_password.info | grep user | awk '{ print $2 }')' WHERE id_system = '1';"
			sqlite3 -echo $MySB_DB "UPDATE system SET mysb_password = '$(cat /etc/MySB/infos/MySB_password.info | grep pass | awk '{ print $2 }')' WHERE id_system = '1';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/MySB_password.info
			fi
		fi
		if [ -f /etc/MySB/infos/certpass.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE system SET cert_password = '$(cat /etc/MySB/infos/certpass.info)' WHERE id_system = '1';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/certpass.info
			fi
		fi
		if [ -f /etc/MySB/infos/port_ftp.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET port_tcp1 = '$(cat /etc/MySB/infos/port_ftp.info)' WHERE serv_name = 'VSFTPd';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/port_ftp.info
			fi
		fi
		if [ -f /etc/MySB/infos/port_ftpdata.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET port_tcp2 = '$(cat /etc/MySB/infos/port_ftpdata.info)' WHERE serv_name = 'VSFTPd';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/port_ftpdata.info
			fi
		fi
		if [ -f /etc/MySB/infos/port_ssh.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET port_tcp1 = '$(cat /etc/MySB/infos/port_ssh.info)' WHERE serv_name = 'SSH';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/port_ssh.info
			fi
		fi
		if [ -f /etc/MySB/infos/port_https.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET port_tcp1 = '$(cat /etc/MySB/infos/port_https.info)' WHERE serv_name = 'NginX';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/port_https.info
			fi
		fi
		if [ -f /etc/MySB/infos/port_http.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET port_tcp2 = '$(cat /etc/MySB/infos/port_http.info)' WHERE serv_name = 'NginX';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/port_http.info
			fi
		fi
		# ----- System info

		# ----- Services info
		if [ -f /etc/MySB/infos/install_cakebox.info ] && [ -f /etc/MySB/infos/port_cakebox.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET port_tcp1 = '$(cat /etc/MySB/infos/port_cakebox.info)', is_installed = '$(cat /etc/MySB/infos/install_cakebox.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'CakeBox-Light';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/install_cakebox.info
				echo /etc/MySB/infos/port_cakebox.info
			fi
		fi
		if [ -f /etc/MySB/infos/install_webmin.info ] && [ -f /etc/MySB/infos/port_webmin.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET port_tcp1 = '$(cat /etc/MySB/infos/port_webmin.info)', is_installed = '$(cat /etc/MySB/infos/install_webmin.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'Webmin';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/install_webmin.info
				echo /etc/MySB/infos/port_webmin.info
			fi
		fi
		if [ -f /etc/MySB/infos/install_openvpn.info ] && [ -f /etc/MySB/infos/port_openvpn.info ] && [ -f /etc/MySB/infos/proto_openvpn.info ]; then
			Port_OpenVPN_WithGW="$(cat /etc/MySB/infos/port_openvpn.info)"
			Port_OpenVPN_WithoutGW="${Port_OpenVPN_WithGW}"
			(( Port_OpenVPN_WithoutGW++ ))

			case "$(cat /etc/MySB/infos/proto_openvpn.info)" in
				"tcp")
					sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_openvpn.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')', port_tcp1 = '${Port_OpenVPN_WithGW}', port_tcp2 = '${Port_OpenVPN_WithoutGW}', port_tcp3 = '', ports_tcp_list = '', port_udp1 = '', port_udp2 = '', port_udp3 = '', ports_udp_list = '' WHERE serv_name = 'OpenVPN';"
				;;
				"udp")
					sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_openvpn.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')', port_tcp1 = '', port_tcp2 = '', port_tcp3 = '', ports_tcp_list = '', port_udp1 = '${Port_OpenVPN_WithGW}', port_udp2 = '${Port_OpenVPN_WithoutGW}', port_udp3 = '', ports_udp_list = '' WHERE serv_name = 'OpenVPN';"
				;;
			esac
			sqlite3 $MySB_DB "UPDATE services SET is_installed = '1' WHERE serv_name = 'Samba';"
			sqlite3 $MySB_DB "UPDATE services SET is_installed = '1' WHERE serv_name = 'NFS';"

			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/install_openvpn.info
				echo /etc/MySB/infos/port_openvpn.info
				echo /etc/MySB/infos/proto_openvpn.info
			fi
		fi
		if [ -f /etc/MySB/infos/install_dnscrypt.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_dnscrypt.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'DNScrypt-proxy';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/install_dnscrypt.info
			fi
		else
			sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '1' WHERE serv_name = 'DNScrypt-proxy';"
		fi
		if [ -f /etc/MySB/infos/install_fail2ban.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_fail2ban.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'Fail2Ban';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/install_fail2ban.info
			fi
		fi
		if [ -f /etc/MySB/infos/install_manager.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_manager.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'Seedbox-Manager';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/install_manager.info
			fi
		fi
		if [ -f /etc/MySB/infos/install_plexmedia.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_plexmedia.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'Plex Media Server';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/install_plexmedia.info
			fi
		fi
		if [ -f /etc/MySB/infos/blocklist.info ]; then
			MySB_PeerBlock=$(cat /etc/MySB/infos/blocklist.info)
			case $MySB_PeerBlock in
				PeerGuardian)
					sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '1' WHERE serv_name = 'PeerGuardian';"
					sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '0' WHERE serv_name = 'rTorrent Block List';"
				;;
				rTorrent)
					sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '1' WHERE serv_name = 'rTorrent Block List';"
					sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '0' WHERE serv_name = 'PeerGuardian';"
				;;
				*)
					sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '0' WHERE serv_name = 'rTorrent Block List';"
					sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '0' WHERE serv_name = 'PeerGuardian';"
				;;
			esac

			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/blocklist.info
			fi
		fi
		if [ -f /etc/MySB/infos/install_logwatch.info ]; then
			sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '$(cat /etc/MySB/infos/install_logwatch.info | sed 's/NO/0/g;' | sed 's/YES/1/g;')' WHERE serv_name = 'LogWatch';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/install_logwatch.info
			fi
		else
			if [ -d /etc/logwatch/ ]; then
				IsInstalled_LogWatch=1
			else
				IsInstalled_LogWatch=0
			fi
			sqlite3 -echo $MySB_DB "UPDATE services SET is_installed = '$IsInstalled_LogWatch' WHERE serv_name = 'LogWatch';"
		fi
		# ----- Services info

		# ----- SMTP info
		if [ -f /etc/MySB/infos/smtp.info ] \
			&& [ -f /etc/MySB/infos/smtp_user.info ] \
			&& [ -f /etc/MySB/infos/smtp_host.info ] \
			&& [ -f /etc/MySB/infos/smtp_port.info ]; then

			SMTP_Provider="$(cat /etc/MySB/infos/smtp.info)"
			SMTP_Username="$(cat /etc/MySB/infos/smtp_user.info)"
			SMTP_Password="$(cat /etc/postfix/sasl/sasl_passwd | awk '{ print $2 }' | cut -d ":" -f 2)"
			SMTP_Host="$(cat /etc/MySB/infos/smtp_host.info)"
			SMTP_Port="$(cat /etc/MySB/infos/smtp_port.info)"
			MainUserEmail="`sqlite3 $MySB_DB \"SELECT users_email FROM users WHERE admin = '1'\"`"

			sqlite3 -echo $MySB_DB "UPDATE smtp SET smtp_provider = '$SMTP_Provider', smtp_username = '$SMTP_Username', smtp_passwd = '$SMTP_Password', smtp_host = '$SMTP_Host', smtp_port = '$SMTP_Port', smtp_email = '$MainUserEmail' WHERE id_smtp = '1';"

			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/smtp.info
				echo /etc/MySB/infos/smtp_user.info
				echo /etc/MySB/infos/smtp_host.info
				echo /etc/MySB/infos/smtp_port.info
				echo /etc/MySB/infos/smtp_security.info
			fi
		fi
		# ----- SMTP info

		# ----- Ports listing
		if [ -f /etc/MySB/infos/ports.txt ]; then
			Error=0
			while read line; do
				sqlite3 -echo $MySB_DB "INSERT into ports (value) VALUES (\"$line\");"
				if [ $? -gt 0 ]; then
					Error=$?
				fi
			done < /etc/MySB/infos/ports.txt
			if [ $Error -eq 0 ]; then
				echo /etc/MySB/infos/ports.txt
			fi
		fi
		# ----- Ports listing

		# ----- Renting infos
		if [ -f /etc/MySB/infos/renting.info ]; then
			RentingModel="$(cat /etc/MySB/infos/renting.info | grep 'Server model=' | awk -F= '{ print $2 }' | sed 's/^\ \ *//')"
			RentingGlobalCost="$(cat /etc/MySB/infos/renting.info | grep 'Global cost=' | awk -F= '{ print $2 }' | awk '{ print $1 }'  | sed 's/^\ \ *//' | sed 's/\ $*//')"
			RentingTVA="$(cat /etc/MySB/infos/renting.info | grep 'TVA=' | awk -F= '{ print $2 }' | awk '{ print $1 }'  | sed 's/^\ \ *//' | sed 's/\ $*//')"
			
			sqlite3 -echo $MySB_DB "UPDATE renting SET model = '$RentingModel', tva = '$RentingTVA', global_cost = '$RentingGlobalCost' WHERE id_renting = '1';"
			if [ $? -eq 0 ]; then
				echo /etc/MySB/infos/renting.info
			fi
		fi
		# ----- Renting infos

		#### Get Tracker Certificates
		ScriptInvoke 'source' '/etc/MySB/scripts/GetTrackersCert.bsh' 'REFRESH'

		# Create users trackers listing (compare)
		if [ -f /etc/MySB/infos/trackers.list ]; then
			while read line; do
				if [ ! -z "$line" ]; then
					PART1=`echo ${line} | cut -d "." -f 1`
					PART2=`echo ${line} | cut -d "." -f 2`
					PART3=`echo ${line} | cut -d "." -f 3`

					if [ -z "$PART3" ]; then
						TrackerDomain="`echo $PART1`.`echo $PART2`"
					else
						TrackerDomain="`echo $PART2`.`echo $PART3`"
					fi
					unset PART1 PART2 PART3
					
					IfExist="`sqlite3 $MySB_DB \"SELECT tracker FROM trackers_list WHERE tracker_domain = '$TrackerDomain'\"`"
					if [ -z "$IfExist" ]; then
						AddTracker $TrackerDomain "users"
					fi
					unset IfExist
				fi
			done < /etc/MySB/infos/trackers.list
			echo /etc/MySB/infos/trackers.list
		fi
		# ----- Trackers listing

		if [ "`ls /etc/MySB/infos/`" == "" ]; then
			echo /etc/MySB/infos/
		fi
	fi
	
fi # if [ -s $MySB_DB ] && hash sqlite3 2> /dev/null; then

# -----------------------------------------
source /etc/MySB/inc/includes_after.bsh
# -----------------------------------------
##################### LAST LINE ######################################