#!/bin/bash 
# ----------------------------------
source /etc/MySB/inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### Create dir
if [ ! -d /etc/MySB/ssl/trackers/ ]; then
	mkdir /etc/MySB/ssl/trackers/
fi

#### Clean certificates with bad links
case "$1" in
	"APPLYCONFIG")
		DoCleanCertificates=0
		DoGetRutorrentTrackers=0
		DoGetUsersTrackers=0
		DoActivateTrackers=0
		DoUpdateUsersTracker=0
	;;
	*) # "REFRESH" or "INSTALL"
		DoCleanCertificates=1
		DoGetRutorrentTrackers=1
		DoGetUsersTrackers=1
		DoActivateTrackers=1
		DoUpdateUsersTrackers=1
	;;
esac

if [ "$DoCleanCertificates" == "1" ]; then
	log_daemon_msg "Clean certificates with bad links"
	LIST_CERTS=$(ls -la /etc/ssl/certs/ | awk '{ print $9 }')
	for Cert in ${LIST_CERTS}; do
		if [ "$Cert" != "" ] && [ "$Cert" != "." ] && [ "$Cert" != ".." ]; then

			TARGET=$(ls -la /etc/ssl/certs/$Cert | awk '{ print $11 }')

			if [ ! -f $TARGET ]; then
				rm -f /etc/ssl/certs/$Cert
			fi
			
			unset Cert TARGET
		fi
	done
	unset LIST_CERTS
	StatusLSB
fi

#### Create trackers listing
# 1 - Add ruTorrent trackers in db
if [ "$DoGetRutorrentTrackers" == "1" ]; then
	GetRutorrentTrackers
fi

# 2 - Add users trackers in db
if [ "$DoGetUsersTrackers" == "1" ]; then
	GetUsersTrackers
fi

# 3 - Activate trackers with users' actived torrents
if [ "$DoActivateTrackers" == "1" ]; then
	ListingUsers
	for SeedboxUser in $UsersList; do
		if [ -d /home/$SeedboxUser/rtorrent/.session/ ]; then
			TorrentListing="`ls -1r /home/$SeedboxUser/rtorrent/.session/`"

			if [ ! -z "$TorrentListing" ]; then
				cd /home/$SeedboxUser/rtorrent/.session/
				for Torrent in $TorrentListing; do
					if [ "`echo $Torrent | grep '.libtorrent_resume'`" != "" ]; then
						Tracker="`cat $Torrent | tr -cd '[:print:]' | sed 's/=//' | sed 's/:\/\//=/' | cut -d '=' -f 2 | cut -d '/' -f 1 | cut -d ':' -f 1`"
						if [ "`echo $TrackerList | grep $Tracker`" == "" ]; then
							TrackerList="$TrackerList $Tracker"
						fi
					fi
				done
			fi
		fi
	done

	if [ ! -z "$TrackerList" ]; then
		for Tracker in $TrackerList; do
			PART1=`echo ${Tracker} | cut -d "." -f 1`
			PART2=`echo ${Tracker} | cut -d "." -f 2`
			PART3=`echo ${Tracker} | cut -d "." -f 3`
			if [ -z "$PART3" ]; then
				TrackerDomain="`echo $PART1`.`echo $PART2`"
			else
				TrackerDomain="`echo $PART2`.`echo $PART3`"
			fi
			unset PART1 PART2 PART3

			IfExist="`sqlite3 $MySB_DB \"SELECT tracker FROM trackers_list WHERE tracker_domain = '$TrackerDomain'\"`"
			if [ -z "$IfExist" ]; then
				AddTracker $Tracker "users"
			else
				log_daemon_msg "Force activation of tracker: $Tracker"
				sqlite3 $MySB_DB "UPDATE trackers_list SET is_active = '1' WHERE tracker_domain = '$TrackerDomain';"
				StatusLSB
			fi
		done
	fi
fi

#### Update users trackers data
if [ "$DoUpdateUsersTrackers" == "1" ]; then
	TrackersList="`sqlite3 $MySB_DB \"SELECT tracker FROM trackers_list WHERE origin = 'users' AND to_check = '1'\"`"

	for Tracker in $TrackersList; do
		AddTracker $Tracker "users"
	done
fi

#### Get certificates
TrackersList="`sqlite3 $MySB_DB \"SELECT tracker FROM trackers_list WHERE to_check = '1'\"`"
DoRehash=0

for Tracker in $TrackersList; do
	log_daemon_msg "Get certificate for $Tracker"
	cd /etc/MySB/ssl/trackers/
	# TODO
	# Some trackers are down or block our request.
	# Find a solution with a timeout or a ping... We can stay blocked during installation a long time.
	openssl s_client -connect $Tracker:443 </dev/null 2>/dev/null | sed -n '/BEGIN CERTIFICATE/,/END CERTIFICATE/p' >> ./$Tracker.crt
	if [ -s ./$Tracker.crt ]; then
		openssl x509 -in ./$Tracker.crt -out ./$Tracker.der -outform DER 
		openssl x509 -in ./$Tracker.der -inform DER -out ./$Tracker.pem -outform PEM
		if [ -e ./$Tracker.pem ]; then
			if [ -f /etc/ssl/certs/$Tracker.pem ]; then
				rm -f /etc/ssl/certs/$Tracker.pem
			fi
			ln -s /etc/MySB/ssl/trackers/$Tracker.pem /etc/ssl/certs/$Tracker.pem
			sqlite3 $MySB_DB "UPDATE trackers_list SET is_ssl = '1' WHERE tracker = '$Tracker';"
			DoRehash=1
		fi

		rm -f ./$Tracker.der
	fi
	sqlite3 $MySB_DB "UPDATE trackers_list SET to_check = '0' WHERE tracker = '$Tracker';"

	rm -f ./$Tracker.crt
	StatusLSB
done

#### Create again certificates listing in system
if [ "$DoRehash" == 1 ]; then
	log_daemon_msg "Certificates Rehash"
	update-ca-certificates &> /dev/null
	StatusLSB
fi

# -----------------------------------------
source /etc/MySB/inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################